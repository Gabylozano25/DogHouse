
package interfaz;

import archivos.AlmacenarCompetencias;
import archivos.LeerArchivos;
import controlador.Controlador;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.image.ImageFilter;
import java.awt.image.ImageObserver;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import modelo.Competencia;
import modelo.Perro;

/**
 *
 * @author gabrielalozano
 */
public class Ventana extends javax.swing.JFrame implements ListSelectionListener, ItemListener {

    controlador.Controlador control;
    String rutaImagen;
    LeerArchivos archivos;

    public Ventana() {
        initComponents();
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        control = new Controlador();
        this.listadoPerros.setVisible(Boolean.FALSE);
        this.listadoPerros.addItemListener(this);
        this.listadoCompetencias.addItemListener(this);
        jList1.addListSelectionListener(this);
        this.refreshLista();
        rutaImagen = "";
        archivos = new LeerArchivos();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txNombreCompetencia = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txLugar = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txFecha = new javax.swing.JTextField();
        CrearCompetencia = new javax.swing.JButton();
        listadoPerros = new javax.swing.JComboBox();
        listadoCompetencias = new javax.swing.JComboBox<>();
        asignarPerro = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txNombrePerro = new javax.swing.JTextField();
        txRaza = new javax.swing.JTextField();
        txEdad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txPuntos = new javax.swing.JTextField();
        AgregarPerro = new javax.swing.JButton();
        Imagen = new javax.swing.JLabel();
        Examinar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        EscribirArchivo = new javax.swing.JButton();
        Serializar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        ordenarRaza = new javax.swing.JButton();
        ordenarNombre = new javax.swing.JButton();
        ordenarPuntos = new javax.swing.JButton();
        cargarPlano = new javax.swing.JButton();
        cargarSerializado = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Competencia"));

        jLabel5.setText("Nombre:");

        jLabel6.setText("Lugar:");

        jLabel7.setText("Fecha:");

        CrearCompetencia.setText("Crear Competencia");
        CrearCompetencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearCompetenciaActionPerformed(evt);
            }
        });

        listadoPerros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listadoPerrosActionPerformed(evt);
            }
        });

        asignarPerro.setText("Asignar perro a competencia");
        asignarPerro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asignarPerroActionPerformed(evt);
            }
        });

        jLabel8.setText("Perros:");

        jLabel9.setText("Competencias:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CrearCompetencia)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel8))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(listadoPerros, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(listadoCompetencias, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGap(39, 39, 39)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel5))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txNombreCompetencia, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txLugar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(asignarPerro)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txNombreCompetencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txLugar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listadoPerros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listadoCompetencias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(11, 11, 11)
                .addComponent(CrearCompetencia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(asignarPerro)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Perro"));

        jLabel1.setText("Nombre:");

        jLabel2.setText("Raza:");

        jLabel3.setText("Edad:");

        txNombrePerro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txNombrePerroActionPerformed(evt);
            }
        });

        jLabel4.setText("Puntos:");

        txPuntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txPuntosActionPerformed(evt);
            }
        });

        AgregarPerro.setText("Agregar Perro");
        AgregarPerro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarPerroActionPerformed(evt);
            }
        });

        Imagen.setText("Imagen:");

        Examinar.setText("Examinar");
        Examinar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExaminarActionPerformed(evt);
            }
        });

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(AgregarPerro)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel1))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(Imagen)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txPuntos, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                .addComponent(txEdad)
                                .addComponent(txRaza)
                                .addComponent(txNombrePerro))
                            .addComponent(Examinar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txNombrePerro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txRaza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txPuntos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Examinar)
                    .addComponent(Imagen))
                .addGap(18, 18, 18)
                .addComponent(AgregarPerro)
                .addGap(60, 60, 60))
        );

        EscribirArchivo.setText("Escribir archivo");
        EscribirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EscribirArchivoActionPerformed(evt);
            }
        });

        Serializar.setText("Serializar");
        Serializar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SerializarActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Perros"));

        jScrollPane1.setViewportView(jList1);

        ordenarRaza.setText("Ordenar por Raza");
        ordenarRaza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenarRazaActionPerformed(evt);
            }
        });

        ordenarNombre.setText("Ordenar por Nombre");
        ordenarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenarNombreActionPerformed(evt);
            }
        });

        ordenarPuntos.setText("Ordenar por Puntos");
        ordenarPuntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenarPuntosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ordenarPuntos)
                    .addComponent(ordenarNombre)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(ordenarRaza)))
                .addGap(22, 22, 22))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ordenarRaza)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ordenarNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ordenarPuntos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cargarPlano.setText("Cargar (Plano)");
        cargarPlano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarPlanoActionPerformed(evt);
            }
        });

        cargarSerializado.setText("Cargar (Serializado)");
        cargarSerializado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarSerializadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(EscribirArchivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Serializar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cargarPlano)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cargarSerializado))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(9, 9, 9))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cargarSerializado)
                            .addComponent(cargarPlano))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Serializar)
                            .addComponent(EscribirArchivo))
                        .addGap(15, 15, 15))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txNombrePerroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txNombrePerroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txNombrePerroActionPerformed

    private void AgregarPerroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarPerroActionPerformed

        try {
            control.crearPerro(txNombrePerro.getText(), txRaza.getText(), Integer.parseInt(txEdad.getText()),
                    Integer.parseInt(txPuntos.getText()), this.rutaImagen);

            this.listadoPerros.setVisible(Boolean.TRUE);

            txNombrePerro.setText("");
            txRaza.setText("");
            txEdad.setText("");
            txPuntos.setText("");
            jLabel10.setIcon(null);
            this.refreshComboBoxPerros();
            this.refreshLista();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Debe ingresar los datos correctamente");
        }
    }//GEN-LAST:event_AgregarPerroActionPerformed

    private void CrearCompetenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearCompetenciaActionPerformed

        try {

            control.crearCompetencia(txNombreCompetencia.getText(), txLugar.getText(), txFecha.getText());

            txNombreCompetencia.setText("");
            txLugar.setText("");
            txFecha.setText("");
            this.refreshComboBoxCompetencia();
            this.refreshLista();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Debe ingresar los datos correctamente");
        }

    }//GEN-LAST:event_CrearCompetenciaActionPerformed

    public void refreshLista() {

        String nombreC = (String) this.listadoCompetencias.getSelectedItem();

        for (Competencia c : control.getCompetencias()) {

            if (c.getNombre().equals(nombreC)) {

                DefaultListModel modeloLista = new DefaultListModel();

                jList1.removeAll();

                int i = 0;

                for (Perro perro : c.getPerros()) {
                    modeloLista.add(i, perro.getNombre() + ";" + perro.getRaza() + ";" + perro.getEdad() + ";" + perro.getPuntos());
                    i++;
                }
                jList1.setModel(modeloLista);

            }
        }
    }

    public void refreshComboBoxPerros() {
        this.listadoPerros.removeAllItems();

        for (Perro p : control.getPerros()) {
            this.listadoPerros.addItem(p.getNombre());
        }
    }

    public void refreshComboBoxCompetencia() {
        this.listadoCompetencias.removeAllItems();

        for (Competencia c : control.getCompetencias()) {
            this.listadoCompetencias.addItem(c.getNombre());
        }
    }


    private void EscribirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EscribirArchivoActionPerformed
        AlmacenarCompetencias alm = new AlmacenarCompetencias();
        alm.escribirCompetenciasArchivoPlano(control.getCompetencias());
    }//GEN-LAST:event_EscribirArchivoActionPerformed

    private void txPuntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txPuntosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txPuntosActionPerformed

    private void listadoPerrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listadoPerrosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_listadoPerrosActionPerformed

    private void SerializarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SerializarActionPerformed
        AlmacenarCompetencias alm = new AlmacenarCompetencias();
        alm.escribirCompetenciasSerializado(control.getCompetencias());
    }//GEN-LAST:event_SerializarActionPerformed

    private void ordenarRazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenarRazaActionPerformed

        control.ordenarPorRaza(perrosCreados());
        this.refreshLista();

    }//GEN-LAST:event_ordenarRazaActionPerformed

    private void asignarPerroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asignarPerroActionPerformed

        String lP = (String) listadoPerros.getSelectedItem();
        String lC = (String) listadoCompetencias.getSelectedItem();

        control.asignaPerroCompetencia(lP, lC);

        this.refreshLista();

    }//GEN-LAST:event_asignarPerroActionPerformed

    private void ordenarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenarNombreActionPerformed
        control.ordenarPorNombre(perrosCreados());
        this.refreshLista();
    }//GEN-LAST:event_ordenarNombreActionPerformed

    private void ordenarPuntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenarPuntosActionPerformed
        control.ordenarPorPuntos(perrosCreados());
        this.refreshLista();
    }//GEN-LAST:event_ordenarPuntosActionPerformed

    private void cargarPlanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarPlanoActionPerformed

        ArrayList<Perro> perros = control.cargarPerrosArchivoPlano();
        DefaultListModel modeloLista = new DefaultListModel();
        for (Perro c : perros) {
            modeloLista.addElement(c);
        }
        jList1.setModel(modeloLista);
        this.refreshLista();

    }//GEN-LAST:event_cargarPlanoActionPerformed

    private void cargarSerializadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarSerializadoActionPerformed
        ArrayList<Perro> perros = control.cargarPerrosArchivoPlano();
        DefaultListModel modeloLista = new DefaultListModel();
        for (Perro c : perros) {
            modeloLista.addElement(c);
        }
        jList1.setModel(modeloLista);
        this.refreshLista();
    }//GEN-LAST:event_cargarSerializadoActionPerformed


    private void ExaminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExaminarActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("JPG & PNG Imágenes", "jpg", "png");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();

            ImageIcon image = new ImageIcon(file.getAbsolutePath());
            rutaImagen = file.getAbsolutePath();

            Image scaledImage = image.getImage().getScaledInstance(jLabel10.getWidth(), jLabel10.getHeight(), Image.SCALE_DEFAULT);
            image = new ImageIcon(scaledImage);
            jLabel10.setIcon(image);
        }

    }//GEN-LAST:event_ExaminarActionPerformed
    private ArrayList<Perro> perrosCreados() {

        ArrayList<Perro> p = new ArrayList<Perro>();

        String nombreC = (String) this.listadoCompetencias.getSelectedItem();

        for (Competencia c : control.getCompetencias()) {

            if (c.getNombre().equals(nombreC)) {

                p = c.getPerros();
            }
        }
        return p;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarPerro;
    private javax.swing.JButton CrearCompetencia;
    private javax.swing.JButton EscribirArchivo;
    private javax.swing.JButton Examinar;
    private javax.swing.JLabel Imagen;
    private javax.swing.JButton Serializar;
    private javax.swing.JButton asignarPerro;
    private javax.swing.JButton cargarPlano;
    private javax.swing.JButton cargarSerializado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private DefaultListModel modelo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> listadoCompetencias;
    private javax.swing.JComboBox listadoPerros;
    private javax.swing.JButton ordenarNombre;
    private javax.swing.JButton ordenarPuntos;
    private javax.swing.JButton ordenarRaza;
    private javax.swing.JTextField txEdad;
    private javax.swing.JTextField txFecha;
    private javax.swing.JTextField txLugar;
    private javax.swing.JTextField txNombreCompetencia;
    private javax.swing.JTextField txNombrePerro;
    private javax.swing.JTextField txPuntos;
    private javax.swing.JTextField txRaza;
    // End of variables declaration//GEN-END:variables

    @Override
    public void valueChanged(ListSelectionEvent e) {
        this.muestraCampos();
    }

    public void muestraCampos() {
        String nombre = jList1.getSelectedValue();

        for (Perro p : this.perrosCreados()) {
            if (p.getNombre().equals(nombre)) {
                this.txNombrePerro.setText(p.getNombre());
                this.txRaza.setText(p.getRaza());
                this.txEdad.setText(p.getEdad() + "");
                this.txPuntos.setText(p.getPuntos() + "");
            }
        }
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        Object fuente = e.getItemSelectable();

        if (fuente == listadoCompetencias) {
            if (e.getStateChange() == ItemEvent.SELECTED) {

                String s = (String) listadoCompetencias.getSelectedItem();

                if (!s.equalsIgnoreCase("")) {
                    this.refreshLista();
                } else {
                    this.jList1.clearSelection();
                }

            }
        }
    }
    
    

//    public void guardarPerro(Perro stdnt) {
//        try {
//            
//            File file = new File(archivos.getRutaPerros());
//            FileWriter fr = new FileWriter(file, true);
//            PrintWriter ps = new PrintWriter(fr);
//            ps.println(stdnt);
//            ps.close();
//            JOptionPane.showMessageDialog(null, "Perro agregado");
//        } catch (IOException ioe) {
//            System.exit(1);
//        }
//    }
//    private void cargarPerrosArchivo(){
//         FileReader file;
//        BufferedReader br;
//        String registro;
//        String[] campos = new String[5];
//        try {
//            file = new FileReader(archivos.getRutaPerros());
//            br = new BufferedReader(file);
//            registro = br.readLine();
//            while (registro != null) {
//                campos = registro.split(";");
//                Perro stdnt = new Perro();
//                stdnt.setNombre(campos[0]);
//                stdnt.setRaza(campos[1]);
//                stdnt.setEdad(Integer.parseInt(campos[2]));
//                stdnt.setPuntos(Integer.parseInt(campos[3]));
//                stdnt.setRuta(campos[4]);
//               
//                control.getPerros().add(stdnt);
//                registro = br.readLine();
//            }
//        } catch (IOException ioe) {
//           JOptionPane.showMessageDialog(null, "Error al cargar el archivo plano");
//        }
//
//    }
//    private void cargarCompetenciasArchivo(){
//             FileReader file;
//        BufferedReader br;
//        String registro;
//        String[] campos = new String[4];
//        try {
//            file = new FileReader(archivos.getRutaCompetencias());
//            br = new BufferedReader(file);
//            registro = br.readLine();
//            while (registro != null) {
//                campos = registro.split(";");
//                Competencia stdnt = new Competencia();
//                stdnt.setNombre(campos[0]);
//                stdnt.setLugar(campos[1]);
//                stdnt.setFecha(campos[2]);
//                stdnt.setPerros(new ArrayList<Perro>());
//          
//               
//                control.getCompetencias().add(stdnt);
//                registro = br.readLine();
//            }
//        } catch (IOException ioe) {
//            JOptionPane.showMessageDialog(null, "Error al cargar el archivo plano");
//        }
//        
//    }
}
